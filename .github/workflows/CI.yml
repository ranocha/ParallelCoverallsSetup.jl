name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# Cancel redundant CI tests automatically
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: ${{ matrix.os }}-${{ matrix.arch }}-${{ github.event_name }}-Julia${{ matrix.version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      # Standard setup for Julia CI
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      # Codecov can be configured via `.codecov.yml` and online to work with parallel builds
      - uses: codecov/codecov-action@v1
        with:
          file: ./lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
      # The standard setup of Coveralls is just annoying for parallel builds, see, e.g.,
      # https://github.com/trixi-framework/Trixi.jl/issues/691
      # https://github.com/coverallsapp/github-action/issues/47
      # https://github.com/coverallsapp/github-action/issues/67
      # Thus, we use a more tedious approach here:
      # - Store all inidvidual coverage files as artifacts (here)
      # - Download and merge individual coverage reports in another step
      # - Upload only the merged coverage report to Coveralls
      - shell: bash
        run: |
          cp ./lcov.info ./lcov-${{ matrix.os }}-${{ matrix.version }}-${{ matrix.arch }}.info
      - uses: actions/upload-artifact@v2
        with:
          name: lcov-${{ matrix.os }}-${{ matrix.version }}-${{ matrix.arch }}
          path: ./lcov-${{ matrix.os }}-${{ matrix.version }}-${{ matrix.arch }}.info

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # Manual approach for Coveralls  (see comment above)
      # Download all artifacts (and list files for debugging)
      - uses: actions/download-artifact@v2
      - run: ls -R
      # Merge lcov files and upload result to Coveralls
      - run: sudo apt install lcov
      - run: find ./ -name lcov-*.info -exec echo -a {} \; | xargs lcov -o ./lcov.info
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info
      - uses: actions/upload-artifact@v2
        with:
          name: full_coverage
          path: ./lcov.info
      # That's it
      - run: echo "Finished testing"
